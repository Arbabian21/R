# Make the barplot
barplot(fishcount1,
main = "Distribution of Species",
ylab = "Count",
xlab = "Species")
names(fishcount1) <- c("Cat",
"Crappie",
"LMB",
"Other",
"SMB",
"Steel",
"Wall")
# Make the barplot
barplot(fishcount1,
main = "Distribution of Species",
ylab = "Count",
xlab = "Species")
# Changing Column names
names(fishcount1) <- c("Cat",
"Crappie",
"LMB",
"Other",
"SMB",
"Steel",
"Wall")
# Make the barplot
barplot(fishcount1,
main = "Distribution of Species",
ylab = "Count",
xlab = "Species"
col = "lightblue")
# Changing Column names
names(fishcount1) <- c("Cat",
"Crappie",
"LMB",
"Other",
"SMB",
"Steel",
"Wall")
# Make the barplot
barplot(fishcount1,
main = "Distribution of Species",
ylab = "Count",
xlab = "Species",
col = "lightblue")
# col adds color
SpecLocTable <- table(fish1$Species, fish1$Location)
SpecLocTable
barplot(SpecLocTable)
barplot(SpecLocTable,
main = "Distribution of Fish by Location",
xlab = "Location",
ylab = "Counts")
barplot(SpecLocTable,
main = "Distribution of Fish by Location",
xlab = "Location",
ylab = "Counts",
legend = row.names(SpecLocTable))
pdf("./R/Lecture10/Bar2.pdf")
barplot(SpecLocTable,
main = "Distribution of Fish by Location",
xlab = "Location",
ylab = "Counts",
legend = row.names(SpecLocTable))
dev.off()
barplot(SpecLocTable,
main = "Distribution of Fish by Location",
xlab = "Location",
ylab = "Counts",
beside = TRUE,
#legend = row.names(SpecLocTable)
)
pdf("./R/Lecture10/Bar1.pdf")
barplot(SpecLocTable,
main = "Distribution of Fish by Location",
xlab = "Location",
ylab = "Counts",
beside = TRUE,
legend = row.names(SpecLocTable)
dev.off()
pdf("./R/Lecture10/Bar1.pdf")
barplot(SpecLocTable,
main = "Distribution of Fish by Location",
xlab = "Location",
ylab = "Counts",
beside = TRUE,
legend = row.names(SpecLocTable))
dev.off()
pdf("./R/Lecture10/Bar2.pdf")
barplot(SpecLocTable,
main = "Distribution of Fish by Location",
xlab = "Location",
ylab = "Counts",
legend = row.names(SpecLocTable),
col = c("black", "red", "blue", "green", "orange", "yellow", "pink"))
dev.off()
# Read in the CycklerCPK.csv data
cycler1 <- read.csv("./R/DataSets/CyclerCPK.csv", header = TRUE)
head (cycler1)
# Stem and Leaf Plot
stem(cycler1$CPK1)
# Read in the CycklerCPK.csv data
cycler1 <- read.csv("./R/DataSets/CyclerCPK.csv", header = TRUE)
head (cycler1)
# Stem and Leaf Plot
stem(cycler1$CPK1)
cur1<-read.csv("./R/DataSets/Currency.csv")
curcount1<- table( cur1$Currency )
barplot( curcount1, main = "Currency", xlab = "Currency", ylab = "FOM")
barplot( curcount1, main = "Currency Change," xlab = "Currency", ylab = "FOM", col= "bLaNcHeDaLmOnD" )
barplot( curcount1, main = "Currency Change," xlab = "Currency", ylab = "FOM", col= "blanchedalmond" )
bear1 <- read.csv("./R/DataSets/BEARS.csv")
bear1 <- read.csv("./R/DataSets/BEARS.csv")
View(bear1)
stem(bear1$AGE)
###########################################
#
# Barcharts in R... Part 3
#
###########################################
# Read in the data
fish1 <- read.csv("./R/DataSets/MIFish.csv", header = TRUE)
head(fish1)
# head shows first 6 data elements
# Create a table
fishcount1 <- table(fish1$Species)
fishcount1
# Make the table
SpecLocTable <- table(fish1$Species, fish1$Location)
pdf("./R/Lecture10/Bar2.pdf")
barplot(SpecLocTable,
main = "Distribution of Fish by Location",
xlab = "Location",
ylab = "Counts",
legend = row.names(SpecLocTable),
col = c("black", "red", "blue", "green", "orange", "yellow", "pink"))
dev.off()
pdf("./R/Lecture10/Bar1.pdf")
barplot(SpecLocTable,
main = "Distribution of Fish by Location",
xlab = "Location",
ylab = "Counts",
beside = TRUE,
legend = row.names(SpecLocTable))
dev.off()
setwd("~/R/Lecture15")
#####################################################
#
# Working with Text in R
# Dataset: MIFish.csv
#####################################################
MIFish1 <- read.csv('../DataSets/MIFish.csv', header = TRUE)
head(MIFish1)
table(MIFish1)
substr(MIFish1$Location)
substr(MIFish1$Location, start = 1, stop = 1)
MIFish1$Location[1:5]
substr(MIFish1$Location[1:5], start = 1, stop = 1)
substr(MIFish1$Location[1:5], start = 2, stop = 2)
MIFish1$Location[1:5]
substr(MIFish1$Location[1:5], start = 1, stop = 3)
grep('Bass', MIFish1$Species)
grep('Bass', MIFish1$Species)
# Search through a dataset for a specific string
Bass1 <- grep('Bass', MIFish1$Species)
MIFish1[Bass1,]
# FInd where a substring begins
regexpr('Bass', MIFish1$Species)
Bass2 <- MIFish1[Bass1,]
regexpr('Bass', Bass2$Species)
#####################################################
#
# Working with Text in R
# Dataset: MIFish.csv
#####################################################
MIFish1 <- read.csv('../DataSets/MIFish.csv', header = TRUE)
head(MIFish1)
# Create a table that summarizes the frequency
table(MIFish1)
# Pull the first letter from a string(text)
substr(MIFish1$Location, start = 1, stop = 1)
MIFish1$Location[1:5]
substr(MIFish1$Location[1:5], start = 2, stop = 3)
# Search through a dataset for a specific string
Bass1 <- grep('Bass', MIFish1$Species)
MIFish1[Bass1,]
# Find where a substring begins
# -1 means not there
regexpr('Bass', MIFish1$Species)
MIFish1$Species[1:10]
Bass2 <- MIFish1[Bass1,]
regexpr('Bass', Bass2$Species)
tolower(Bass2$Species)
paste("The", "Dog", "ran", "down", "the", "street.")
paste("A", MIFish1$Species, "was caught at location", MIFish1$Location)
# no space seperator
paste("A", MIFish1$Species, "was caught at location", MIFish1$Location,
sep = "")
#####################################################
#
# Working with dates in R
# Dataset: RBOBWTI.csv
#####################################################
# Read in the data
RBOB1 <- read.csv('../DataSets/RBOBWTI.csv', header = TRUE)
head(RBOB1)
#####################################################
#
# Working with dates in R
# Dataset: RBOBWTI.csv
#####################################################
# Read in the data
RBOB1 <- read.csv('../DataSets/RBOBWTI.csv', header = TRUE)
head(RBOB1)
RBOB1$Date[1] - RBOB1$Date[200]
RBOB.Dates <- as.Date(RBOB1$Date, format = '%b%d,%Y')
RBOB.Dates
RBOB.Dates[1] - RBOB.Dates[200]
months(RBOB.Dates[210:230])
max(RBOB.Dates)
# Create a sequence of dates
# Base date
bd` <- max(RBOB.Dates)
seq(bd1, length = 7, by "weeks")`
seq(bd1, length = 7, by = "weeks")`
# Summary dates
meanDate <- mean(RBOB.Dates)
min(RBOB.Dates)
IQR(RBOB.Dates)
#####################################################
#
# Working with dates in R
# Dataset: RBOBWTI.csv
#####################################################
# Read in the data
RBOB1 <- read.csv('../DataSets/RBOBWTI.csv', header = TRUE)
head(RBOB1)
# Test: How to determine if R sees it as a date
RBOB1$Date[1] - RBOB1$Date[200]
RBOB.Dates <- as.Date(RBOB1$Date, format = '%b%d,%Y')
# How to determine the format code
# %d day of the month
# %b abbreviation for the month
# %Y year in 4 digits
#
# %y year in 2 digits
# %m month in a number
# %B month full name
# Test
RBOB.Dates[200] - RBOB.Dates[1]
# Confrimed
# What month is the data
months(RBOB.Dates[210:230])
# What day of the week is it?
weekdays(RBOB.Dates[210:230])
# Max Date
max(RBOB.Dates)
# Create a sequence of dates
# Base date
bd` <- max(RBOB.Dates)
#####################################################
#
# Working with dates in R
# Dataset: RBOBWTI.csv
#####################################################
# Read in the data
RBOB1 <- read.csv('../DataSets/RBOBWTI.csv', header = TRUE)
head(RBOB1)
# Test: How to determine if R sees it as a date
RBOB1$Date[1] - RBOB1$Date[200]
#####################################################
#
# Working with dates in R
# Dataset: RBOBWTI.csv
#####################################################
# Read in the data
RBOB1 <- read.csv('../DataSets/RBOBWTI.csv', header = TRUE)
head(RBOB1)
# Test: How to determine if R sees it as a date
RBOB1$Date[1] - RBOB1$Date[200]
RBOB.Dates <- as.Date(RBOB1$Date, format = '%b%d,%Y')
# How to determine the format code
# %d day of the month
# %b abbreviation for the month
# %Y year in 4 digits
#
# %y year in 2 digits
# %m month in a number
# %B month full name
# Test
RBOB.Dates[200] - RBOB.Dates[1]
# Confrimed
# What month is the data
months(RBOB.Dates[210:230])
# What day of the week is it?
weekdays(RBOB.Dates[210:230])
# Max Date
max(RBOB.Dates)
# Create a sequence of dates
# Base date
bd` <- max(RBOB.Dates)
# start data, # of time periods, time period
seq(bd, length = 7, by = "weeks")`
# start data, num of time periods, time period
seq(bd, length = 7, by = "weeks")`
# Summary dates
meanDate <- mean(RBOB.Dates)
min(RBOB.Dates)
IQR(RBOB.Dates)
# Test: How to determine if R sees it as a date
RBOB1$Date[1] - RBOB1$Date[200]
RBOB.Dates <- as.Date(RBOB1$Date, format = '%b%d,%Y')
# How to determine the format code
# %d day of the month
# %b abbreviation for the month
# %Y year in 4 digits
#
# %y year in 2 digits
# %m month in a number
# %B month full name
# Test
RBOB.Dates[200] - RBOB.Dates[1]
# Confrimed
# What month is the data
months(RBOB.Dates[210:230])
# What day of the week is it?
weekdays(RBOB.Dates[210:230])
# Max Date
max(RBOB.Dates)
# Create a sequence of dates
# Base date
bd` <- max(RBOB.Dates)
# What day of the week is it?
weekdays(RBOB.Dates[210:230])
# Max Date
max(RBOB.Dates)
# Create a sequence of dates
# Base date
bd1 <- max(RBOB.Dates)
# start data, num of time periods, time period
seq(bd1, length = 7, by = "weeks")`
# Summary dates
meanDate <- mean(RBOB.Dates)
min(RBOB.Dates)
IQR(RBOB.Dates)
#####################################################
#
# Working with dates in R
# Dataset: RBOBWTI.csv
#####################################################
# Read in the data
RBOB1 <- read.csv('../DataSets/RBOBWTI.csv', header = TRUE)
head(RBOB1)
# Test: How to determine if R sees it as a date
RBOB1$Date[1] - RBOB1$Date[200]
RBOB.Dates <- as.Date(RBOB1$Date, format = '%b%d,%Y')
# How to determine the format code
# %d day of the month
# %b abbreviation for the month
# %Y year in 4 digits
#
# %y year in 2 digits
# %m month in a number
# %B month full name
# Test
RBOB.Dates[200] - RBOB.Dates[1]
# Confrimed
# What month is the data
months(RBOB.Dates[210:230])
# What day of the week is it?
weekdays(RBOB.Dates[210:230])
# Max Date
max(RBOB.Dates)
# Create a sequence of dates
# Base date
bd1 <- max(RBOB.Dates)
# start data, num of time periods, time period
seq(bd1, length = 7, by = "weeks")`
#####################################################
#
# Working with dates in R
# Dataset: RBOBWTI.csv
#####################################################
# Read in the data
RBOB1 <- read.csv('../DataSets/RBOBWTI.csv', header = TRUE)
head(RBOB1)
# Test: How to determine if R sees it as a date
RBOB1$Date[1] - RBOB1$Date[200]
RBOB.Dates <- as.Date(RBOB1$Date, format = '%b%d,%Y')
# How to determine the format code
# %d day of the month
# %b abbreviation for the month
# %Y year in 4 digits
#
# %y year in 2 digits
# %m month in a number
# %B month full name
# Test
RBOB.Dates[200] - RBOB.Dates[1]
# Confrimed
# What month is the data
months(RBOB.Dates[210:230])
# What day of the week is it?
weekdays(RBOB.Dates[210:230])
# Max Date
max(RBOB.Dates)
# Create a sequence of dates
# Base date
bd1 <- max(RBOB.Dates)
# start data, num of time periods, time period
seq(bd1, length = 7, by = "weeks")`
# Summary dates
meanDate <- mean(RBOB.Dates)
min(RBOB.Dates)
IQR(RBOB.Dates)
bd1 <- max(RBOB.Dates)
bd1 <- max(RBOB.Dates)
bd1 <- max(RBOB.Dates)
seq(bd1, length = 7, by = "weeks")`
seq(bd1, length = 7, by = "weeks")`
bd1 <- max(RBOB.Dates)
# start data, num of time periods, time period
seq(bd1, length = 7, by = "weeks")`
seq(bd1, length = 7, by = "weeks")`
# start data, num of time periods, time period
# start data, num of time periods, time period
seq(bd1, length = 7, by = "weeks")
# Summary dates
meanDate <- mean(RBOB.Dates)
min(RBOB.Dates)
IQR(RBOB.Dates)
meanDate
max(RBOB.Dates)
#####################################################
#
# Working with dates in R
# Dataset: RBOBWTI.csv
#####################################################
# Read in the data
RBOB1 <- read.csv('../DataSets/RBOBWTI.csv', header = TRUE)
head(RBOB1)
# Test: How to determine if R sees it as a date
RBOB1$Date[1] - RBOB1$Date[200]
RBOB.Dates <- as.Date(RBOB1$Date, format = '%b%d,%Y')
# How to determine the format code
# %d day of the month
# %b abbreviation for the month
# %Y year in 4 digits
#
# %y year in 2 digits
# %m month in a number
# %B month full name
# Test
RBOB.Dates[200] - RBOB.Dates[1]
# Confrimed
# What month is the data
months(RBOB.Dates[210:230])
# What day of the week is it?
weekdays(RBOB.Dates[210:230])
# Max Date
max(RBOB.Dates)
# Create a sequence of dates
# Base date
bd1 <- max(RBOB.Dates)
# start data, num of time periods, time period
seq(bd1, length = 7, by = "weeks")
# Summary dates
meanDate <- mean(RBOB.Dates)
min(RBOB.Dates)
IQR(RBOB.Dates)
RBOB1 <- read.csv('../DataSets/RBOBWTI.csv', header = TRUE)
head(RBOB1)
setwd("~/R/Lecture15")
#####################################################
#
# Working with dates in R
# Dataset: RBOBWTI.csv
#####################################################
# Read in the data
RBOB1 <- read.csv('../DataSets/RBOBWTI.csv', header = TRUE)
head(RBOB1)
# Test: How to determine if R sees it as a date
RBOB1$Date[1] - RBOB1$Date[200]
RBOB.Dates <- as.Date(RBOB1$Date, format = '%b%d,%Y')
# How to determine the format code
# %d day of the month
# %b abbreviation for the month
# %Y year in 4 digits
#
# %y year in 2 digits
# %m month in a number
# %B month full name
# Test
RBOB.Dates[200] - RBOB.Dates[1]
# Confrimed
# What month is the data
months(RBOB.Dates[210:230])
# What day of the week is it?
weekdays(RBOB.Dates[210:230])
# Max Date
max(RBOB.Dates)
# Create a sequence of dates
# Base date
bd1 <- max(RBOB.Dates)
# start data, num of time periods, time period
seq(bd1, length = 7, by = "weeks")
# Summary dates
meanDate <- mean(RBOB.Dates)
min(RBOB.Dates)
IQR(RBOB.Dates)
RBOB1 <- read.csv('../DataSets/RBOBWTI.csv', header = TRUE)
head(RBOB1)
